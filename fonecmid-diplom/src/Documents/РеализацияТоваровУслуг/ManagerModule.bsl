
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании) Экспорт
	
	Если ПравоДоступа("Добавление", Метаданные.Документы.РеализацияТоваровУслуг) Тогда
		
        КомандаСоздатьНаОсновании = КомандыСозданияНаОсновании.Добавить();
        КомандаСоздатьНаОсновании.Менеджер = Метаданные.Документы.РеализацияТоваровУслуг.ПолноеИмя();
        КомандаСоздатьНаОсновании.Представление = ОбщегоНазначения.ПредставлениеОбъекта(Метаданные.Документы.РеализацияТоваровУслуг);
        КомандаСоздатьНаОсновании.РежимЗаписи = "Проводить";
		
		Возврат КомандаСоздатьНаОсновании;
		
	КонецЕсли;

	Возврат Неопределено;
	
КонецФункции

Процедура ПриОпределенииНастроекПечати(НастройкиОбъекта) Экспорт
	НастройкиОбъекта.ПриДобавленииКомандПечати = Истина;
КонецПроцедуры

Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	КомандаПечати = КомандыПечати.Добавить(); 
	КомандаПечати.Идентификатор = "АктОбОказанныхУслугах";
	КомандаПечати.Представление = НСтр("ru = 'Акт об оказанных услугах'");
	КомандаПечати.Порядок = 5; 
	
КонецПроцедуры  

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	ПечатнаяФорма = УправлениеПечатью.СведенияОПечатнойФорме(КоллекцияПечатныхФорм, "АктОбОказанныхУслугах");
	Если ПечатнаяФорма <> Неопределено Тогда
		ПечатнаяФорма.ТабличныйДокумент = ПечатьАкта(МассивОбъектов, ОбъектыПечати); 
		ПечатнаяФорма.СинонимМакета = НСтр("ru = 'Акт об оказанных услугах'");
		ПечатнаяФорма.ПолныйПутьКМакету = "Документ.РеализацияТоваровУслуг.ПФ_MXL_АктОбОказанныхУслугах";
	КонецЕсли;
	
КонецПроцедуры   

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПечатьАкта(МассивОбъектов, ОбъектыПечати)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.КлючПараметровПечати = "ПараметрыПечати_АктОбОказанныхУслугах";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.РеализацияТоваровУслуг.ПФ_MXL_АктОбОказанныхУслугах");
	
	ДанныеДокументов = ПолучитьДанныеДокументов(МассивОбъектов);
	
	ПервыйДокумент = Истина;
	
	Пока ДанныеДокументов.Следующий() Цикл
		
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ВывестиЗаголовокАкта(ДанныеДокументов, ТабличныйДокумент, Макет);
		
		ВывестиТоварыУслуги(ДанныеДокументов, ТабличныйДокумент, Макет);
		
		ВывестиСуммуПрописью(ДанныеДокументов, ТабличныйДокумент, Макет);
		
		ВывестиПодвалАкта(ДанныеДокументов, ТабличныйДокумент, Макет);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, 
		НомерСтрокиНачало, ОбъектыПечати, ДанныеДокументов.Ссылка);
		
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Функция ПолучитьДанныеДокументов (МассивОбъектов)
        
        Запрос = Новый Запрос;
        Запрос.Текст = 
        "ВЫБРАТЬ
        |	РеализацияТоваровУслуг.Ссылка КАК Ссылка,
        |	РеализацияТоваровУслуг.Номер КАК Номер,
        |	РеализацияТоваровУслуг.Дата КАК Дата,
        |	РеализацияТоваровУслуг.Организация КАК Организация,
        |	РеализацияТоваровУслуг.Контрагент КАК Контрагент,
        |	РеализацияТоваровУслуг.Договор КАК Договор,
        |	РеализацияТоваровУслуг.Ответственный КАК Ответственный,
        |	РеализацияТоваровУслуг.Услуги.(
        |		Ссылка КАК Ссылка,
        |		НомерСтроки КАК НомерСтроки,
        |		Номенклатура КАК Номенклатура,
        |		Количество КАК Количество,
        |		Цена КАК Цена,
        |		Сумма КАК Сумма
        |	) КАК Услуги,
        |	РеализацияТоваровУслуг.СуммаДокумента КАК СуммаДокумента
        |ИЗ
        |	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
        |ГДЕ
        |	РеализацияТоваровУслуг.Ссылка В(&МассивОбъектов)";
        
        Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
        
        РезультатЗапроса = Запрос.Выполнить();
        
        ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
        
        Возврат ВыборкаДетальныеЗаписи; 
        
КонецФункции

Процедура ВывестиЗаголовокАкта(ДанныеДокументов, ТабличныйДокумент, Макет)

	ОбластьЗаголовокДокумента = Макет.ПолучитьОбласть("Заголовок");
	ОбластьЗаголовокДокумента.Параметры.Заполнить(ДанныеДокументов);
	
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьШапка.Параметры.Заполнить(ДанныеДокументов);
	
	ТабличныйДокумент.Вывести(ОбластьЗаголовокДокумента);
	ТабличныйДокумент.Вывести(ОбластьШапка);
КонецПроцедуры 

Процедура ВывестиТоварыУслуги(ДанныеДокументов, ТабличныйДокумент, Макет)
	
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьСтрока = Макет.ПолучитьОбласть("Услуги");
	ОбластьИтого = Макет.ПолучитьОбласть("Итого");
	
	ТабличныйДокумент.Вывести(ОбластьШапкаТаблицы);
	
	Выборка = ДанныеДокументов.Услуги.Выбрать();
	Пока Выборка.Следующий() Цикл
		ОбластьСтрока.Параметры.Заполнить(Выборка);
		ТабличныйДокумент.Вывести(ОбластьСтрока);
	КонецЦикла;
	
	ОбластьИтого.Параметры.Заполнить(ДанныеДокументов);
	ТабличныйДокумент.Вывести(ОбластьИтого);
	
КонецПроцедуры

Процедура ВывестиСуммуПрописью(ДанныеДокументов, ТабличныйДокумент, Макет);
	
	ОбластьСуммаПрописью = Макет.ПолучитьОбласть("СуммаДокумента");		
	ФормСтрока = "Л = ru_RU; ДП = Истина";
	ПараметрыИсчесления = "рубль,рубля,рублей,м,копейка,копейки,копеек,м,2";
	СуммаПрописью = ЧислоПрописью(ДанныеДокументов.СуммаДокумента, ФормСтрока, ПараметрыИсчесления);
	
	ДанныеПечати = Новый Структура;
	
	ДанныеПечати.Вставить("СуммаДокументаПрописью", СуммаПрописью);		
	
	ОбластьСуммаПрописью.Параметры.Заполнить(ДанныеПечати);
	
	ТабличныйДокумент.Вывести(ОбластьСуммаПрописью);
	
КонецПроцедуры

Процедура ВывестиПодвалАкта(ДанныеДокументов, ТабличныйДокумент, Макет)
	
	ОбластьПодвалАкта = Макет.ПолучитьОбласть("Подвал");
	
	//ДанныеПечати = Новый Структура;
	//
	//ДанныеПечати.Вставить("ФИОИсполнителя", ДанныеДокументов.Ответственный);		
	
	ОбластьПодвалАкта.Параметры.Заполнить(ДанныеДокументов);

	ТабличныйДокумент.Вывести(ОбластьПодвалАкта);
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли